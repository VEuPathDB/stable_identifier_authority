-- MySQL Script generated by MySQL Workbench
-- Wed Apr 22 19:42:14 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema stable_identifier_authority
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema stable_identifier_authority
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `stable_identifier_authority` DEFAULT CHARACTER SET utf8 ;
USE `stable_identifier_authority` ;

-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`assigning_application`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`assigning_application` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`assigning_application` (
  `application_id` INT NOT NULL AUTO_INCREMENT,
  `application_name` VARCHAR(500) NOT NULL,
  `version` VARCHAR(45) NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`application_id`),
  UNIQUE INDEX `application_name` (`application_name` ASC, `version` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`feature_archive`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`feature_archive` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`feature_archive` (
  `fa_stable_identifier_event_id` INT NOT NULL,
  `sequence` LONGBLOB NOT NULL,
  `MD5checksum` VARCHAR(500) NOT NULL,
  `fa_session_id` INT NOT NULL,
  PRIMARY KEY (`fa_stable_identifier_event_id`),
  INDEX `archive_session_id_idx` (`fa_session_id` ASC) VISIBLE,
  CONSTRAINT `archive_stable_identifier_event_id`
    FOREIGN KEY (`fa_stable_identifier_event_id`)
    REFERENCES `stable_identifier_authority`.`stable_identifier_event` (`stable_identifier_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `archive_session_id`
    FOREIGN KEY (`fa_session_id`)
    REFERENCES `stable_identifier_authority`.`session` (`session_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`feature_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`feature_type` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`feature_type` (
  `feature_type_id` INT NOT NULL AUTO_INCREMENT,
  `feature_name` VARCHAR(45) NOT NULL,
  `abbreviation` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`feature_type_id`),
  UNIQUE INDEX `feature_name_UNIQUE` (`feature_name` ASC) VISIBLE,
  UNIQUE INDEX `abbreviation_UNIQUE` (`abbreviation` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`organism`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`organism` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`organism` (
  `organism_id` INT NOT NULL AUTO_INCREMENT,
  `production_name` VARCHAR(500) NOT NULL,
  `genus` VARCHAR(500) NOT NULL,
  `species` VARCHAR(500) NOT NULL,
  `strain` VARCHAR(500) NOT NULL,
  `ncbi_taxonomy_id` VARCHAR(500) NOT NULL,
  `prefix` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`organism_id`),
  UNIQUE INDEX `production_name_UNIQUE` (`production_name` ASC) VISIBLE,
  UNIQUE INDEX `prefix_UNIQUE` (`prefix` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`organism_build`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`organism_build` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`organism_build` (
  `build_id` INT NOT NULL AUTO_INCREMENT,
  `ob_organism_id` INT NOT NULL,
  `INSDC_number` VARCHAR(500) NOT NULL,
  `gene_build` VARCHAR(45) NOT NULL,
  `status` ENUM('current', 'obsolete') NOT NULL DEFAULT 'current',
  PRIMARY KEY (`build_id`),
  INDEX `organism_id_idx` (`ob_organism_id` ASC) VISIBLE,
  UNIQUE INDEX `build_idx` (`INSDC_number` ASC, `gene_build` ASC) VISIBLE,
  CONSTRAINT `build_organism_id`
    FOREIGN KEY (`ob_organism_id`)
    REFERENCES `stable_identifier_authority`.`organism` (`organism_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`session` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`session` (
  `session_id` INT NOT NULL AUTO_INCREMENT,
  `ses_application_id` INT NOT NULL,
  `database_name` VARCHAR(500) NOT NULL,
  `ses_build_id` INT NOT NULL,
  `data_check` ENUM('pass', 'fail', 'pending') NOT NULL DEFAULT 'pending',
  `message` BLOB NOT NULL,
  `creation_date` DATETIME NOT NULL,
  PRIMARY KEY (`session_id`),
  INDEX `application_id_idx` (`ses_application_id` ASC) VISIBLE,
  INDEX `build_id_idx` (`ses_build_id` ASC) VISIBLE,
  CONSTRAINT `session_application_id`
    FOREIGN KEY (`ses_application_id`)
    REFERENCES `stable_identifier_authority`.`assigning_application` (`application_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `session_build_id`
    FOREIGN KEY (`ses_build_id`)
    REFERENCES `stable_identifier_authority`.`organism_build` (`build_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`stable_identifier_event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`stable_identifier_event` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`stable_identifier_event` (
  `stable_identifier_event_id` INT NOT NULL AUTO_INCREMENT,
  `stable_identifier` VARCHAR(100) NOT NULL,
  `version` INT NOT NULL,
  `sie_feature_type_id` INT NOT NULL,
  `status` ENUM('current', 'obsolete') NOT NULL DEFAULT 'current',
  `sie_session_id` INT NOT NULL,
  PRIMARY KEY (`stable_identifier_event_id`),
  INDEX `feature_type_id_idx` (`sie_feature_type_id` ASC) VISIBLE,
  INDEX `session_id_idx` (`sie_session_id` ASC) VISIBLE,
  UNIQUE INDEX `name_version` (`stable_identifier` ASC, `version` ASC) VISIBLE,
  CONSTRAINT `event_feature_type_id`
    FOREIGN KEY (`sie_feature_type_id`)
    REFERENCES `stable_identifier_authority`.`feature_type` (`feature_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `event_session_id`
    FOREIGN KEY (`sie_session_id`)
    REFERENCES `stable_identifier_authority`.`session` (`session_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`stable_identifier_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`stable_identifier_log` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`stable_identifier_log` (
  `sil_organism_id` INT NOT NULL,
  `sil_feature_type_id` INT NOT NULL,
  `last_allocated_identifier` INT NOT NULL,
  INDEX `organism_id_idx` (`sil_organism_id` ASC) VISIBLE,
  INDEX `feature_type_id_idx` (`sil_feature_type_id` ASC) VISIBLE,
  CONSTRAINT `log_organism_id`
    FOREIGN KEY (`sil_organism_id`)
    REFERENCES `stable_identifier_authority`.`organism` (`organism_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `log_feature_type_id`
    FOREIGN KEY (`sil_feature_type_id`)
    REFERENCES `stable_identifier_authority`.`feature_type` (`feature_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`stable_identifier_relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`stable_identifier_relationship` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`stable_identifier_relationship` (
  `parent_event_id` INT NOT NULL,
  `child_event_id` INT NOT NULL,
  UNIQUE INDEX `gene_model` (`parent_event_id` ASC, `child_event_id` ASC) VISIBLE,
  INDEX `relationship_child_idx` (`child_event_id` ASC) VISIBLE,
  CONSTRAINT `relationship_parent`
    FOREIGN KEY (`parent_event_id`)
    REFERENCES `stable_identifier_authority`.`stable_identifier_event` (`stable_identifier_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `relationship_child`
    FOREIGN KEY (`child_event_id`)
    REFERENCES `stable_identifier_authority`.`stable_identifier_event` (`stable_identifier_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stable_identifier_authority`.`stable_identifier_tracking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stable_identifier_authority`.`stable_identifier_tracking` ;

CREATE TABLE IF NOT EXISTS `stable_identifier_authority`.`stable_identifier_tracking` (
  `successor_event_id` INT NOT NULL,
  `predecessor_event_id` INT NOT NULL,
  `sit_session_id` INT NOT NULL,
  INDEX `session_id_idx` (`sit_session_id` ASC) VISIBLE,
  INDEX `stable_identifier_event_id_idx` (`successor_event_id` ASC) VISIBLE,
  INDEX `tracking_predecessor_id_idx` (`predecessor_event_id` ASC) VISIBLE,
  CONSTRAINT `tracking_session_id`
    FOREIGN KEY (`sit_session_id`)
    REFERENCES `stable_identifier_authority`.`session` (`session_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tracking_stable_identifier_event_id`
    FOREIGN KEY (`successor_event_id`)
    REFERENCES `stable_identifier_authority`.`stable_identifier_event` (`stable_identifier_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tracking_predecessor_id`
    FOREIGN KEY (`predecessor_event_id`)
    REFERENCES `stable_identifier_authority`.`stable_identifier_event` (`stable_identifier_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
